@using System.Globalization
@model TravelSummaryViewModel

@{
    CultureInfo culture = CultureInfo.GetCultureInfo("es-ES");
    string startDate = Model.StartDate.ToString("dd MMM yyyy", culture);
    string endDate = Model.EndDate.ToString("dd MMM yyyy", culture);
    string totalCost = string.Format(culture, "{0:N2} {1}", Model.TotalCost, Model.Currency);
    string initialBudget = string.Format(culture, "{0:N2} {1}", Model.InitialBudget, Model.Currency);
    string difference = string.Format(culture, "{0:N2} {1}", Model.BudgetDifference, Model.Currency);
    bool overBudget = Model.BudgetDifference > 0m;
}

<div class="space-y-10">
    <header class="space-y-6 rounded-3xl border border-white/10 bg-gradient-to-br from-brand-500/20 via-slate-900/80 to-slate-950/90 p-8 shadow-glow">
        <div class="flex flex-col gap-4 lg:flex-row lg:items-center lg:justify-between">
            <div>
                <p class="text-xs uppercase tracking-[0.3em] text-brand-300/80">Resumen del viaje</p>
                <h1 class="mt-2 text-4xl font-bold text-white">@Model.Title</h1>
                <p class="mt-2 text-sm text-slate-200">@Model.Destination · @startDate — @endDate</p>
            </div>
            <div class="flex flex-wrap items-center gap-3 text-xs font-semibold text-slate-200">
                <span class="rounded-full border border-white/10 px-4 py-2 text-slate-300">Estado: <span class="text-white">@Model.CurrentStatus</span></span>
                <span class="rounded-full border border-white/10 px-4 py-2 text-slate-300">Duración: <span class="text-white">@Model.DurationDays días</span></span>
                <span class="rounded-full border border-white/10 px-4 py-2 text-slate-300">Actividades: <span class="text-white">@Model.ActivitiesCount</span></span>
            </div>
        </div>
        <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-4">
            <div class="rounded-2xl border border-white/10 bg-slate-950/50 p-5">
                <p class="text-xs uppercase tracking-widest text-slate-500">Contador de días</p>
                <p class="mt-2 text-3xl font-semibold text-white">@Model.DurationDays</p>
                <p class="text-xs text-slate-400">Del @startDate al @endDate</p>
            </div>
            <div class="rounded-2xl border border-white/10 bg-slate-950/50 p-5">
                <p class="text-xs uppercase tracking-widest text-slate-500">Total de actividades</p>
                <p class="mt-2 text-3xl font-semibold text-white">@Model.ActivitiesCount</p>
                <p class="text-xs text-slate-400">Incluye hitos y eventos planificados</p>
            </div>
            <div class="rounded-2xl border border-white/10 bg-slate-950/50 p-5">
                <p class="text-xs uppercase tracking-widest text-slate-500">Coste acumulado</p>
                <p class="mt-2 text-3xl font-semibold text-brand-200">@totalCost</p>
                <p class="text-xs @(overBudget ? "text-red-300" : "text-emerald-300")">@(overBudget ? "Sobre el presupuesto" : "Dentro del presupuesto")</p>
            </div>
            <div class="rounded-2xl border border-white/10 bg-slate-950/50 p-5">
                <p class="text-xs uppercase tracking-widest text-slate-500">Progreso</p>
                <p class="mt-2 text-3xl font-semibold text-white">@Model.ProgressPercentage%</p>
                <div class="mt-3 h-2 rounded-full bg-slate-800">
                    <div class="h-full rounded-full bg-brand-500" style="width: @Model.ProgressPercentage%"></div>
                </div>
            </div>
        </div>
        <div class="flex flex-wrap gap-3">
            <button class="rounded-full border border-white/10 px-4 py-2 text-xs font-semibold text-slate-200 transition hover:border-brand-500 hover:text-brand-200">Itinerario</button>
            <button class="rounded-full border border-white/10 px-4 py-2 text-xs font-semibold text-slate-200 transition hover:border-brand-500 hover:text-brand-200">Mapa</button>
            <button class="rounded-full border border-white/10 px-4 py-2 text-xs font-semibold text-slate-200 transition hover:border-brand-500 hover:text-brand-200">Presupuesto</button>
            <button class="rounded-full border border-white/10 px-4 py-2 text-xs font-semibold text-slate-200 transition hover:border-brand-500 hover:text-brand-200">Transportes</button>
            <button class="rounded-full border border-white/10 px-4 py-2 text-xs font-semibold text-slate-200 transition hover:border-brand-500 hover:text-brand-200">Alojamiento</button>
            <button class="rounded-full border border-brand-500/40 px-4 py-2 text-xs font-semibold text-brand-200 transition hover:border-brand-500 hover:text-brand-50">Compartir</button>
        </div>
    </header>

    <section class="grid gap-6 lg:grid-cols-3">
        <div class="rounded-3xl border border-white/10 bg-slate-900/70 p-6 shadow-lg lg:col-span-2">
            <h2 class="text-lg font-semibold text-white">Presupuesto vs gasto</h2>
            <p class="mt-1 text-sm text-slate-400">Compara lo estimado con lo invertido hasta ahora.</p>
            <dl class="mt-6 grid gap-4 md:grid-cols-3">
                <div class="rounded-2xl border border-white/10 bg-slate-950/70 p-5">
                    <dt class="text-xs uppercase tracking-widest text-slate-500">Presupuesto inicial</dt>
                    <dd class="mt-2 text-2xl font-semibold text-white">@initialBudget</dd>
                </div>
                <div class="rounded-2xl border border-white/10 bg-slate-950/70 p-5">
                    <dt class="text-xs uppercase tracking-widest text-slate-500">Gasto acumulado</dt>
                    <dd class="mt-2 text-2xl font-semibold text-brand-200">@totalCost</dd>
                </div>
                <div class="rounded-2xl border border-white/10 bg-slate-950/70 p-5">
                    <dt class="text-xs uppercase tracking-widest text-slate-500">Diferencia</dt>
                    <dd class="mt-2 text-2xl font-semibold @(overBudget ? "text-red-300" : "text-emerald-300")">@difference</dd>
                    <dd class="text-xs text-slate-400">@(overBudget ? "Has excedido el presupuesto." : "Aún queda margen disponible.")</dd>
                </div>
            </dl>
        </div>

        <div class="space-y-6">
            <div class="rounded-3xl border border-white/10 bg-slate-900/70 p-6 shadow-lg">
                <h3 class="text-lg font-semibold text-white">Alojamiento actual</h3>
                <p class="mt-1 text-sm text-slate-400">Última actualización en tu planificación.</p>
                <div class="mt-4 space-y-3">
                    <div>
                        <p class="text-xs uppercase tracking-widest text-slate-500">Nombre</p>
                        <p class="mt-1 text-sm font-semibold text-white">@Model.LodgingName</p>
                    </div>
                    <div>
                        <p class="text-xs uppercase tracking-widest text-slate-500">Tarifa por noche</p>
                        <p class="mt-1 text-sm font-semibold text-white">@string.Format(culture, "{0:N2} {1}", Model.LodgingNightlyRate, Model.Currency)</p>
                    </div>
                </div>
            </div>

            <div class="rounded-3xl border border-white/10 bg-slate-900/70 p-6 shadow-lg">
                <h3 class="text-lg font-semibold text-white">Próximos eventos</h3>
                <p class="mt-1 text-sm text-slate-400">Actividades con horario definido.</p>
                <div class="mt-4 space-y-3">
                    @if (!Model.UpcomingEvents.Any())
                    {
                        <p class="text-sm text-slate-400">Aún no hay eventos planificados. Añade hitos para verlos aquí.</p>
                    }
                    else
                    {
                        @foreach (UpcomingEventViewModel upcoming in Model.UpcomingEvents)
                        {
                            string eventDate = upcoming.Date.ToString("dd MMM", culture);
                            string startTime = upcoming.StartTime.ToString("HH:mm", culture);
                            string endTime = upcoming.EndTime.ToString("HH:mm", culture);
                            string cost = string.Format(culture, "{0:N2} {1}", upcoming.Cost, Model.Currency);

                            <div class="rounded-2xl border border-white/10 bg-slate-950/70 p-4">
                                <div class="flex items-center justify-between text-xs text-slate-400">
                                    <span>@eventDate</span>
                                    <span>@startTime — @endTime</span>
                                </div>
                                <p class="mt-2 text-sm font-semibold text-white">@upcoming.Title</p>
                                <p class="text-xs text-brand-200">Coste: @cost</p>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </section>
</div>
