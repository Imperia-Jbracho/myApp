@using System.Globalization
@using System.Linq
@using System.Text.Json
@model TravelListViewModel

@{
    CultureInfo culture = CultureInfo.GetCultureInfo("es-ES");
    JsonSerializerOptions jsonOptions = new JsonSerializerOptions
    {
        PropertyNamingPolicy = JsonNamingPolicy.CamelCase
    };

    string baseApiUrl = Url.Content("~/api/travel");
}

<div class="space-y-10">
    <div class="flex flex-col gap-4 lg:flex-row lg:items-center lg:justify-between">
        <div>
            <p class="text-sm uppercase tracking-[0.3em] text-brand-500/80">Mis viajes</p>
            <h2 class="mt-1 text-3xl font-semibold text-white">Tu tablero de aventuras</h2>
            <p class="mt-2 max-w-2xl text-sm text-slate-400">Administra cada viaje, compara tu presupuesto con el gasto real y retoma la planificación cuando lo necesites.</p>
        </div>
        <div class="flex items-center gap-3">
            <button type="button" data-action="open-create" class="flex items-center gap-2 rounded-2xl bg-brand-500 px-5 py-3 text-sm font-semibold text-white shadow-glow transition hover:bg-brand-600">
                <i data-lucide="plus" class="size-4"></i>
                Crear viaje
            </button>
        </div>
    </div>

    <div class="flex flex-col gap-4 lg:flex-row lg:items-center lg:justify-between">
        <div class="flex flex-wrap gap-2">
            <a href="@Url.Action("Index", new { filter = "todos", search = Model.SearchTerm })" class="rounded-full px-4 py-2 text-sm font-medium transition @(Model.ActiveFilter == "todos" ? "bg-brand-500 text-white shadow-glow" : "bg-slate-900/80 text-slate-300 hover:bg-white/10")">Todos (@Model.TotalCount)</a>
            <a href="@Url.Action("Index", new { filter = "futuros", search = Model.SearchTerm })" class="rounded-full px-4 py-2 text-sm font-medium transition @(Model.ActiveFilter == "futuros" ? "bg-brand-500 text-white shadow-glow" : "bg-slate-900/80 text-slate-300 hover:bg-white/10")">Futuros (@Model.FutureCount)</a>
            <a href="@Url.Action("Index", new { filter = "pasados", search = Model.SearchTerm })" class="rounded-full px-4 py-2 text-sm font-medium transition @(Model.ActiveFilter == "pasados" ? "bg-brand-500 text-white shadow-glow" : "bg-slate-900/80 text-slate-300 hover:bg-white/10")">Pasados (@Model.PastCount)</a>
            <a href="@Url.Action("Index", new { filter = "archivados", search = Model.SearchTerm })" class="rounded-full px-4 py-2 text-sm font-medium transition @(Model.ActiveFilter == "archivados" ? "bg-brand-500 text-white shadow-glow" : "bg-slate-900/80 text-slate-300 hover:bg-white/10")">Archivados (@Model.ArchivedCount)</a>
        </div>
        <form method="get" class="flex w-full gap-2 rounded-full border border-white/10 bg-slate-900/70 px-4 py-2 text-sm text-slate-300 focus-within:border-brand-500 focus-within:ring-2 focus-within:ring-brand-500/40 lg:w-96">
            <input type="hidden" name="filter" value="@Model.ActiveFilter" />
            <i data-lucide="search" class="mt-1 size-4 text-slate-500"></i>
            <input type="search" name="search" value="@Model.SearchTerm" placeholder="Buscar viaje por nombre" class="w-full bg-transparent text-sm text-white placeholder:text-slate-500 focus:outline-none" />
            <button type="submit" class="rounded-full bg-brand-500 px-4 py-1 text-sm font-semibold text-white transition hover:bg-brand-600">Buscar</button>
        </form>
    </div>

    @if (!Model.Travels.Any())
    {
        <div class="flex flex-col items-center justify-center gap-6 rounded-3xl border border-dashed border-white/10 bg-slate-900/40 px-10 py-16 text-center shadow-lg">
            <div class="flex size-24 items-center justify-center rounded-full border border-white/10 bg-brand-500/10 text-brand-500">
                <i data-lucide="globe-2" class="size-12"></i>
            </div>
            <div class="space-y-2">
                <h3 class="text-2xl font-semibold text-white">No has creado viajes todavía</h3>
                <p class="text-sm text-slate-400">Organiza tu primera experiencia y lleva el control de presupuesto, actividades y destinos en un solo lugar.</p>
            </div>
            <button type="button" data-action="open-create" class="rounded-full bg-brand-500 px-6 py-3 text-sm font-semibold text-white shadow-glow transition hover:bg-brand-600">Crea tu primer viaje</button>
        </div>
    }
    else
    {
        <div class="space-y-6">
            <div class="overflow-hidden rounded-3xl border border-white/10 bg-slate-900/60 shadow-lg">
                <table class="min-w-full divide-y divide-white/10 text-left text-sm">
                    <thead class="bg-slate-900/80 text-xs uppercase tracking-widest text-slate-400">
                        <tr>
                            <th class="px-6 py-4 font-semibold">Viaje</th>
                            <th class="px-6 py-4 font-semibold">Inicio</th>
                            <th class="px-6 py-4 font-semibold">Fin</th>
                            <th class="px-6 py-4 font-semibold">Destino</th>
                            <th class="px-6 py-4 font-semibold">Coste total</th>
                            <th class="px-6 py-4 font-semibold">Ranking</th>
                            <th class="px-6 py-4 font-semibold text-right">Acciones</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-white/5">
                        @foreach (TravelListItemViewModel item in Model.Travels)
                        {
                            string startDateText = item.StartDate.ToString("dd MMM yyyy", culture);
                            string endDateText = item.EndDate.ToString("dd MMM yyyy", culture);
                            string totalCostText = string.Format(culture, "{0:N2} {1}", item.TotalCost, item.Currency);
                            string rankingText = item.IsFuture ? "—" : (item.Ranking.HasValue ? item.Ranking.Value.ToString(culture) : "Pendiente");

                            object travelPayload = new
                            {
                                id = item.Id,
                                title = item.Title,
                                destination = item.Destination,
                                startDate = item.StartDate.ToString("yyyy-MM-dd", CultureInfo.InvariantCulture),
                                endDate = item.EndDate.ToString("yyyy-MM-dd", CultureInfo.InvariantCulture),
                                currency = item.Currency,
                                initialBudget = item.InitialBudget,
                                participants = item.Participants.Select(participant => new { email = participant.Email, role = participant.Role }),
                                ranking = item.Ranking,
                                archived = item.IsArchived
                            };

                            string travelJson = JsonSerializer.Serialize(travelPayload, jsonOptions);

                            <tr class="transition hover:bg-white/5">
                                <td class="px-6 py-5 text-white">
                                    <div class="font-semibold">@item.Title</div>
                                    <div class="text-xs text-slate-400">@item.DurationDays días · @item.ActivitiesCount actividades</div>
                                </td>
                                <td class="px-6 py-5 text-slate-300">@startDateText</td>
                                <td class="px-6 py-5 text-slate-300">@endDateText</td>
                                <td class="px-6 py-5 text-slate-300">@item.Destination</td>
                                <td class="px-6 py-5 font-semibold text-brand-400">@totalCostText</td>
                                <td class="px-6 py-5 text-slate-300">@rankingText</td>
                                <td class="px-6 py-5">
                                    <div class="flex items-center justify-end gap-2 text-xs font-semibold">
                                        <a href="@Url.Action("Summary", "TravelDetails", new { id = item.Id })" class="rounded-full border border-white/10 px-3 py-1.5 text-slate-300 transition hover:border-brand-500 hover:text-brand-300">Abrir</a>
                                        <button type="button" data-action="edit-travel" data-travel='@Html.Raw(travelJson)' class="rounded-full border border-white/10 px-3 py-1.5 text-slate-300 transition hover:border-brand-500 hover:text-brand-300">Editar</button>
                                        <button type="button" data-action="duplicate-travel" data-id="@item.Id" class="rounded-full border border-white/10 px-3 py-1.5 text-slate-300 transition hover:border-brand-500 hover:text-brand-300">Duplicar</button>
                                        @if (item.IsArchived)
                                        {
                                            <button type="button" data-action="unarchive-travel" data-id="@item.Id" class="rounded-full border border-brand-500/40 px-3 py-1.5 text-brand-300 transition hover:border-brand-500 hover:text-brand-100">Restaurar</button>
                                        }
                                        else
                                        {
                                            <button type="button" data-action="archive-travel" data-id="@item.Id" class="rounded-full border border-white/10 px-3 py-1.5 text-slate-300 transition hover:border-brand-500 hover:text-brand-300">Archivar</button>
                                        }
                                        <button type="button" data-action="delete-travel" data-id="@item.Id" class="rounded-full border border-red-500/40 px-3 py-1.5 text-red-300 transition hover:border-red-500 hover:text-red-200">Eliminar</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="grid gap-6 lg:grid-cols-2 xl:grid-cols-3">
                @foreach (TravelListItemViewModel item in Model.Travels)
                {
                    string progressLabel = string.Format(culture, "{0} %", item.ProgressPercentage);
                    string totalCostLabel = string.Format(culture, "{0:N2} {1}", item.TotalCost, item.Currency);
                    string budgetLabel = string.Format(culture, "{0:N2} {1}", item.InitialBudget, item.Currency);
                    string differenceLabel = string.Format(culture, "{0:N2} {1}", item.BudgetDifference, item.Currency);
                    bool overBudget = item.BudgetDifference > 0;

                    <article class="flex h-full flex-col justify-between gap-6 rounded-3xl border border-white/10 bg-slate-900/60 p-6 shadow-lg transition hover:border-brand-500/60 hover:shadow-glow">
                        <header class="flex items-start justify-between gap-3">
                            <div>
                                <p class="text-xs uppercase tracking-[0.3em] text-slate-500">@item.Destination</p>
                                <h3 class="mt-2 text-xl font-semibold text-white">@item.Title</h3>
                            </div>
                            @if (item.Ranking.HasValue && !item.IsFuture)
                            {
                                <div class="flex items-center gap-1 rounded-full bg-yellow-400/20 px-3 py-1 text-sm font-semibold text-yellow-200">
                                    <i data-lucide="star" class="size-4"></i>
                                    <span>@item.Ranking</span>
                                </div>
                            }
                        </header>

                        <div class="space-y-4">
                            <div>
                                <div class="flex items-center justify-between text-xs font-semibold text-slate-400">
                                    <span>Progreso</span>
                                    <span class="text-white">@progressLabel</span>
                                </div>
                                <div class="mt-2 h-2 rounded-full bg-slate-800">
                                    <div class="h-full rounded-full bg-brand-500" style="width: @item.ProgressPercentage%"></div>
                                </div>
                            </div>

                            <dl class="grid grid-cols-2 gap-4 text-sm text-slate-300">
                                <div class="space-y-1 rounded-2xl border border-white/5 bg-slate-900/80 p-4">
                                    <dt class="text-xs uppercase tracking-widest text-slate-500">Fechas</dt>
                                    <dd class="font-semibold text-white">@item.StartDate.ToString("dd MMM", culture) — @item.EndDate.ToString("dd MMM", culture)</dd>
                                </div>
                                <div class="space-y-1 rounded-2xl border border-white/5 bg-slate-900/80 p-4">
                                    <dt class="text-xs uppercase tracking-widest text-slate-500">Actividades</dt>
                                    <dd class="font-semibold text-white">@item.ActivitiesCount</dd>
                                </div>
                                <div class="space-y-1 rounded-2xl border border-white/5 bg-slate-900/80 p-4">
                                    <dt class="text-xs uppercase tracking-widest text-slate-500">Presupuesto estimado</dt>
                                    <dd class="font-semibold text-white">@budgetLabel</dd>
                                </div>
                                <div class="space-y-1 rounded-2xl border border-white/5 bg-slate-900/80 p-4">
                                    <dt class="text-xs uppercase tracking-widest text-slate-500">Gasto real</dt>
                                    <dd class="font-semibold text-white">@totalCostLabel</dd>
                                    <dd class="text-xs @(overBudget ? "text-red-300" : "text-emerald-300")">@(overBudget ? "Sobre presupuesto" : "Bajo presupuesto"): @differenceLabel</dd>
                                </div>
                            </dl>
                        </div>

                        <footer class="flex items-center justify-between">
                            <div class="flex -space-x-2">
                                @foreach (TravelParticipantViewModel participant in item.Participants.Take(3))
                                {
                                    string initials = new string(participant.Email.Split('@')[0].Take(2).ToArray()).ToUpperInvariant();
                                    <span class="flex size-9 items-center justify-center rounded-full border border-slate-900 bg-brand-500/30 text-xs font-semibold text-brand-100">@initials</span>
                                }
                                @if (item.Participants.Count > 3)
                                {
                                    <span class="flex size-9 items-center justify-center rounded-full border border-slate-900 bg-slate-800 text-xs font-semibold text-slate-200">+@(item.Participants.Count - 3)</span>
                                }
                            </div>
                            <a href="@Url.Action("Summary", "TravelDetails", new { id = item.Id })" class="rounded-full border border-brand-500/50 px-4 py-2 text-xs font-semibold text-brand-200 transition hover:border-brand-500 hover:text-brand-50">Ver resumen</a>
                        </footer>
                    </article>
                }
            </div>
        </div>
    }
</div>

<div id="travel-modal" class="fixed inset-0 z-50 hidden items-center justify-center bg-slate-950/70 p-4 backdrop-blur">
    <div class="relative w-full max-w-3xl rounded-3xl border border-white/10 bg-slate-900/90 p-8 shadow-2xl">
        <button type="button" class="absolute right-4 top-4 text-slate-400 transition hover:text-white" data-action="close-modal">
            <i data-lucide="x" class="size-5"></i>
        </button>
        <div class="space-y-6">
            <div>
                <p class="text-xs uppercase tracking-[0.3em] text-slate-500" id="modal-subtitle">Nuevo viaje</p>
                <h3 class="text-2xl font-semibold text-white" id="modal-title">Crear un viaje</h3>
                <p class="text-sm text-slate-400">Introduce la información clave del viaje. Podrás añadir más detalles en el resumen.</p>
            </div>
            <div id="form-error-summary" class="hidden rounded-2xl border border-red-500/40 bg-red-500/10 px-4 py-3 text-sm text-red-200"></div>
            <form id="travel-form" class="space-y-6">
                <input type="hidden" name="Id" id="travel-id" />
                <div class="grid gap-5 md:grid-cols-2">
                    <label class="flex flex-col gap-2 text-sm">
                        <span class="font-semibold text-white">Título del viaje<span class="text-brand-400"> *</span></span>
                        <input name="Title" id="travel-title" type="text" maxlength="150" required class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/40" placeholder="Ej. Ruta gastronómica por Oaxaca" />
                    </label>
                    <label class="flex flex-col gap-2 text-sm">
                        <span class="font-semibold text-white">Destino principal<span class="text-brand-400"> *</span></span>
                        <input name="Destination" id="travel-destination" type="text" maxlength="150" required class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/40" placeholder="Ciudad, país" />
                    </label>
                    <label class="flex flex-col gap-2 text-sm">
                        <span class="font-semibold text-white">Fecha de inicio<span class="text-brand-400"> *</span></span>
                        <input name="StartDate" id="travel-start" type="date" required class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/40" />
                    </label>
                    <label class="flex flex-col gap-2 text-sm">
                        <span class="font-semibold text-white">Fecha de fin<span class="text-brand-400"> *</span></span>
                        <input name="EndDate" id="travel-end" type="date" required class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/40" />
                    </label>
                    <label class="flex flex-col gap-2 text-sm">
                        <span class="font-semibold text-white">Moneda<span class="text-brand-400"> *</span></span>
                        <input name="Currency" id="travel-currency" type="text" maxlength="10" required class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/40" placeholder="USD" />
                    </label>
                    <label class="flex flex-col gap-2 text-sm">
                        <span class="font-semibold text-white">Presupuesto inicial</span>
                        <input name="InitialBudget" id="travel-budget" type="number" min="0" step="0.01" class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/40" placeholder="0.00" />
                    </label>
                </div>

                <div class="space-y-3">
                    <div class="flex items-center justify-between">
                        <div>
                            <h4 class="text-sm font-semibold text-white">Participantes</h4>
                            <p class="text-xs text-slate-400">Añade los correos electrónicos y roles de colaboración.</p>
                        </div>
                        <button type="button" id="add-participant" class="flex items-center gap-2 rounded-full border border-brand-500/60 px-4 py-2 text-xs font-semibold text-brand-200 transition hover:border-brand-500 hover:text-brand-50">
                            <i data-lucide="user-plus" class="size-4"></i>
                            Agregar participante
                        </button>
                    </div>
                    <div id="participant-list" class="space-y-4"></div>
                </div>

                <div class="flex items-center justify-end gap-3">
                    <button type="button" data-action="close-modal" class="rounded-full border border-white/10 px-5 py-2 text-sm font-semibold text-slate-300 transition hover:border-white/30 hover:text-white">Cancelar</button>
                    <button type="submit" class="rounded-full bg-brand-500 px-6 py-2 text-sm font-semibold text-white shadow-glow transition hover:bg-brand-600">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.travelDashboardConfig = {
            baseApiUrl: '@baseApiUrl'
        };
    </script>
}
