@model TravelDashboardViewModel
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@{
    ViewData["Title"] = "Mis viajes";
    DateTime currentDate = DateTime.UtcNow;
    CultureInfo cultureInfo = CultureInfo.CreateSpecificCulture("es-ES");
    List<TravelViewModel> travels = Model.Travels ?? new List<TravelViewModel>();
    bool hasTravels = travels.Any();
    bool selectedFuturos = Model.SelectedFilter?.Equals("futuros", StringComparison.OrdinalIgnoreCase) == true;
    bool selectedPasados = Model.SelectedFilter?.Equals("pasados", StringComparison.OrdinalIgnoreCase) == true;
    bool selectedArchivados = Model.SelectedFilter?.Equals("archivados", StringComparison.OrdinalIgnoreCase) == true;
    bool selectedTodos = Model.SelectedFilter?.Equals("todos", StringComparison.OrdinalIgnoreCase) == true;
}

<div class="mx-auto max-w-7xl px-4 py-10 sm:px-6 lg:px-8">
    <div class="flex flex-col gap-5 lg:flex-row lg:items-end lg:justify-between">
        <div class="space-y-3">
            <span class="inline-flex items-center gap-2 rounded-full border border-brand-500/40 bg-brand-500/10 px-3 py-1 text-xs font-semibold uppercase tracking-[0.3em] text-brand-300">Panel</span>
            <div class="space-y-2">
                <h1 class="text-4xl font-bold text-white sm:text-5xl">Mis viajes</h1>
                <p class="max-w-2xl text-base text-slate-400">
                    Gestiona tus pr칩ximas aventuras, revisa experiencias pasadas y controla el presupuesto sin perder de vista tus objetivos.
                </p>
            </div>
        </div>
        <button type="button" data-open-modal="travel-modal" class="inline-flex items-center gap-2 self-start rounded-full bg-brand-500 px-6 py-3 text-sm font-semibold text-white shadow-glow transition hover:bg-brand-600 focus:outline-none focus:ring-2 focus:ring-brand-400">
            <i data-lucide="plus" class="size-4"></i>
            Crear viaje
        </button>
    </div>

    <form method="get" class="mt-10 grid gap-4 rounded-3xl border border-white/10 bg-slate-900/60 p-6 shadow-glow md:grid-cols-12">
        <div class="md:col-span-4">
            <label for="filter" class="block text-xs font-semibold uppercase tracking-widest text-slate-400">Filtrar</label>
            <div class="relative mt-2">
                <select id="filter" name="filter" class="w-full appearance-none rounded-2xl border border-white/10 bg-slate-900/80 py-3 pl-4 pr-11 text-sm font-semibold text-white shadow-inner shadow-black/10 focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/50">
                    <option value="futuros" selected="@(selectedFuturos ? "selected" : null)">Futuros</option>
                    <option value="pasados" selected="@(selectedPasados ? "selected" : null)">Pasados</option>
                    <option value="archivados" selected="@(selectedArchivados ? "selected" : null)">Archivados</option>
                    <option value="todos" selected="@(selectedTodos ? "selected" : null)">Todos</option>
                </select>
                <i data-lucide="chevron-down" class="pointer-events-none absolute right-4 top-1/2 size-4 -translate-y-1/2 text-slate-500"></i>
            </div>
        </div>
        <div class="md:col-span-6">
            <label for="search" class="block text-xs font-semibold uppercase tracking-widest text-slate-400">Buscar por nombre</label>
            <div class="relative mt-2">
                <i data-lucide="search" class="pointer-events-none absolute left-4 top-1/2 size-4 -translate-y-1/2 text-slate-500"></i>
                <input type="search" id="search" name="search" value="@Model.SearchTerm" placeholder="Ej. Aventura en Tokio" class="w-full rounded-2xl border border-white/10 bg-slate-900/80 py-3 pl-11 pr-4 text-sm text-white placeholder:text-slate-500 focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/50" />
            </div>
        </div>
        <div class="md:col-span-2 flex items-end">
            <button type="submit" class="inline-flex w-full items-center justify-center gap-2 rounded-2xl border border-brand-400/50 bg-brand-500/20 py-3 text-sm font-semibold text-brand-200 transition hover:bg-brand-500 hover:text-white focus:outline-none focus:ring-2 focus:ring-brand-400">
                <i data-lucide="filter" class="size-4"></i>
                Aplicar
            </button>
        </div>
    </form>

    @if (!hasTravels)
    {
        <div class="mt-12 flex flex-col items-center justify-center gap-6 rounded-3xl border border-dashed border-white/10 bg-slate-900/40 p-16 text-center shadow-glow">
            <div class="relative flex size-28 items-center justify-center rounded-full bg-brand-500/10 text-brand-300">
                <i data-lucide="globe-2" class="size-12"></i>
                <div class="absolute -right-2 -top-2 flex size-10 items-center justify-center rounded-full bg-brand-500 text-xs font-semibold text-white shadow-glow">Nuevo</div>
            </div>
            <div class="space-y-2">
                <h2 class="text-3xl font-semibold text-white">Crea tu primer viaje</h2>
                <p class="mx-auto max-w-xl text-base text-slate-400">
                    Empieza dise침ando un itinerario completo, define un presupuesto realista y coordina participantes para tu pr칩xima escapada.
                </p>
            </div>
            <button type="button" data-open-modal="travel-modal" class="inline-flex items-center gap-2 rounded-full bg-white/10 px-6 py-3 text-sm font-semibold text-white transition hover:bg-white/20 focus:outline-none focus:ring-2 focus:ring-white/30">
                <i data-lucide="sparkles" class="size-4"></i>
                Crea tu primer viaje
            </button>
        </div>
    }
    else
    {
        <div class="mt-12 overflow-hidden rounded-3xl border border-white/10 bg-slate-950/60 shadow-2xl shadow-brand-500/10">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-white/5">
                    <thead class="bg-white/5 text-left text-xs font-semibold uppercase tracking-widest text-slate-400">
                        <tr>
                            <th scope="col" class="px-6 py-4">Viaje</th>
                            <th scope="col" class="px-6 py-4">Inicio</th>
                            <th scope="col" class="px-6 py-4">Fin</th>
                            <th scope="col" class="px-6 py-4">Destino</th>
                            <th scope="col" class="px-6 py-4">Coste total</th>
                            <th scope="col" class="px-6 py-4">Presupuesto</th>
                            <th scope="col" class="px-6 py-4">Ranking</th>
                            <th scope="col" class="px-6 py-4 text-right">Acciones</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-white/5 text-sm text-slate-300">
                        @foreach (TravelViewModel travel in travels)
                        {
                            decimal totalCost = travel.GetTotalCost();
                            decimal balance = travel.InitialBudget - totalCost;
                            bool isUpcoming = travel.IsUpcoming(currentDate);
                            bool isPast = travel.IsPast(currentDate);
                            string badgeText = isUpcoming ? "Pr칩ximo" : travel.IsArchived ? "Archivado" : isPast ? "Pasado" : string.Empty;
                            string balanceClass = balance >= 0 ? "text-emerald-400" : "text-rose-400";
                            string balanceLabel = balance >= 0 ? "Ahorras" : "Exceso";
                            <tr class="transition hover:bg-white/5">
                                <td class="px-6 py-5">
                                    <div class="flex items-center gap-3">
                                        <div class="flex size-10 items-center justify-center rounded-full bg-brand-500/15 text-brand-200">
                                            <i data-lucide="map-pin" class="size-4"></i>
                                        </div>
                                        <div>
                                            <a asp-controller="Travel" asp-action="Details" asp-route-id="@travel.Id" class="text-base font-semibold text-white hover:text-brand-300">@travel.Title</a>
                                            @if (!string.IsNullOrEmpty(badgeText))
                                            {
                                                <span class="ml-2 inline-flex items-center rounded-full bg-white/10 px-2 py-0.5 text-[0.65rem] font-semibold uppercase tracking-widest text-slate-300">@badgeText</span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-5">@travel.StartDate.ToString("dd MMM yyyy", cultureInfo)</td>
                                <td class="px-6 py-5">@travel.EndDate.ToString("dd MMM yyyy", cultureInfo)</td>
                                <td class="px-6 py-5">
                                    <span class="inline-flex items-center gap-2 rounded-full bg-slate-900/80 px-3 py-1 text-xs font-semibold text-slate-300">
                                        <i data-lucide="navigation" class="size-3.5"></i>
                                        @travel.Destination
                                    </span>
                                </td>
                                <td class="px-6 py-5">
                                    <div class="flex flex-col">
                                        <span class="text-sm font-semibold text-white">@totalCost.ToString("C", cultureInfo)</span>
                                        <span class="text-xs text-slate-500">
                                            <span class="@balanceClass">@balanceLabel</span> @Math.Abs(balance).ToString("C", cultureInfo)
                                        </span>
                                    </div>
                                </td>
                                <td class="px-6 py-5 text-sm font-semibold text-slate-200">@travel.InitialBudget.ToString("C", cultureInfo)</td>
                                <td class="px-6 py-5">
                                    @if (travel.Ranking.HasValue)
                                    {
                                        <div class="flex items-center gap-1 text-amber-400">
                                            @for (int starIndex = 0; starIndex < travel.Ranking.Value; starIndex++)
                                            {
                                                <i data-lucide="star" class="size-4 fill-current"></i>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-xs uppercase tracking-widest text-slate-500">Sin ranking</span>
                                    }
                                </td>
                                <td class="px-6 py-5">
                                    <div class="flex items-center justify-end gap-2">
                                        <a asp-controller="Travel" asp-action="Details" asp-route-id="@travel.Id" class="inline-flex items-center gap-2 rounded-full border border-brand-400/40 px-4 py-2 text-xs font-semibold uppercase tracking-widest text-brand-200 transition hover:bg-brand-500 hover:text-white">Abrir</a>
                                        <button type="button" class="inline-flex items-center gap-2 rounded-full border border-white/10 px-4 py-2 text-xs font-semibold uppercase tracking-widest text-slate-300 transition hover:bg-white/10">Duplicar</button>
                                        <button type="button" class="inline-flex items-center gap-2 rounded-full border border-amber-500/40 px-4 py-2 text-xs font-semibold uppercase tracking-widest text-amber-300 transition hover:bg-amber-500/20">Archivar</button>
                                        <button type="button" class="inline-flex items-center gap-2 rounded-full border border-rose-500/40 px-4 py-2 text-xs font-semibold uppercase tracking-widest text-rose-300 transition hover:bg-rose-500/20">Eliminar</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="mt-10 grid gap-6 md:grid-cols-2 xl:grid-cols-3">
            @foreach (TravelViewModel travel in travels)
            {
                decimal totalCost = travel.GetTotalCost();
                int progress = travel.GetProgressPercentage(currentDate);
                decimal balance = travel.InitialBudget - totalCost;
                bool isPositive = balance >= 0;
                string gradientClass = travel.IsArchived ? "from-slate-900/80 via-slate-900/60 to-slate-900/40" : "from-brand-500/20 via-brand-500/10 to-slate-900/60";
                <article class="relative overflow-hidden rounded-3xl border border-white/10 bg-gradient-to-br @gradientClass p-6 shadow-lg shadow-brand-500/10">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center gap-3">
                            <span class="flex size-12 items-center justify-center rounded-2xl bg-white/10 text-lg font-bold text-white">@travel.StartDate.ToString("dd", cultureInfo)</span>
                            <div>
                                <h3 class="text-lg font-semibold text-white">@travel.Title</h3>
                                <p class="text-xs uppercase tracking-widest text-slate-400">@travel.StartDate.ToString("dd MMM", cultureInfo) 췅 @travel.EndDate.ToString("dd MMM", cultureInfo)</p>
                            </div>
                        </div>
                        <a asp-controller="Travel" asp-action="Details" asp-route-id="@travel.Id" class="rounded-full border border-white/10 px-4 py-1 text-xs font-semibold uppercase tracking-widest text-slate-300 transition hover:bg-white/10">Ver detalles</a>
                    </div>
                    <div class="mt-6 space-y-4 text-sm text-slate-300">
                        <div class="flex items-center justify-between">
                            <span class="text-xs uppercase tracking-widest text-slate-500">Progreso</span>
                            <span class="text-sm font-semibold text-white">@progress%</span>
                        </div>
                        <div class="h-2 w-full overflow-hidden rounded-full bg-white/10">
                            <div class="h-full rounded-full bg-brand-500" style="width: @progress%;"></div>
                        </div>
                        <div class="grid grid-cols-2 gap-4 text-sm">
                            <div class="rounded-2xl border border-white/5 bg-slate-900/50 p-3">
                                <p class="text-xs uppercase tracking-widest text-slate-500">Coste total</p>
                                <p class="mt-1 text-base font-semibold text-white">@totalCost.ToString("C", cultureInfo)</p>
                            </div>
                            <div class="rounded-2xl border border-white/5 bg-slate-900/50 p-3">
                                <p class="text-xs uppercase tracking-widest text-slate-500">Balance</p>
                                <p class="mt-1 text-base font-semibold @(isPositive ? "text-emerald-400" : "text-rose-400")">
                                    @(isPositive ? "+" : "-")@Math.Abs(balance).ToString("C", cultureInfo)
                                </p>
                            </div>
                        </div>
                        <div class="flex items-center justify-between text-xs uppercase tracking-widest text-slate-500">
                            <span class="flex items-center gap-2">
                                <i data-lucide="users" class="size-4"></i>
                                @travel.Participants.Count participante@(travel.Participants.Count == 1 ? "" : "s")
                            </span>
                            <span class="flex items-center gap-2">
                                <i data-lucide="calendar" class="size-4"></i>
                                @travel.Milestones.Count hito@(travel.Milestones.Count == 1 ? string.Empty : "s")
                            </span>
                        </div>
                    </div>
                </article>
            }
        </div>
    }
</div>

<dialog id="travel-modal" class="w-full max-w-3xl rounded-3xl border border-white/10 bg-slate-950/95 p-0 text-white backdrop:bg-slate-900/80">
    <div class="flex items-center justify-between border-b border-white/5 px-6 py-4">
        <div>
            <p class="text-xs uppercase tracking-widest text-slate-500">Nuevo viaje</p>
            <h2 class="text-lg font-semibold text-white">Crear o editar viaje</h2>
        </div>
        <button type="button" data-close-modal="travel-modal" class="rounded-full border border-white/10 p-2 text-slate-400 transition hover:bg-white/10 hover:text-white">
            <i data-lucide="x" class="size-4"></i>
        </button>
    </div>
    <form class="space-y-6 px-6 py-6">
        <div class="grid gap-4 md:grid-cols-2">
            <div class="md:col-span-2">
                <label for="travel-title" class="block text-xs font-semibold uppercase tracking-widest text-slate-400">T칤tulo del viaje <span class="text-rose-400">*</span></label>
                <input id="travel-title" type="text" placeholder="Escapada a Lisboa" class="mt-2 w-full rounded-2xl border border-white/10 bg-slate-900/80 px-4 py-3 text-sm text-white placeholder:text-slate-500 focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/50" required />
            </div>
            <div>
                <label for="travel-start" class="block text-xs font-semibold uppercase tracking-widest text-slate-400">Fecha de inicio <span class="text-rose-400">*</span></label>
                <input id="travel-start" type="date" class="mt-2 w-full rounded-2xl border border-white/10 bg-slate-900/80 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/50" required />
            </div>
            <div>
                <label for="travel-end" class="block text-xs font-semibold uppercase tracking-widest text-slate-400">Fecha de fin <span class="text-rose-400">*</span></label>
                <input id="travel-end" type="date" class="mt-2 w-full rounded-2xl border border-white/10 bg-slate-900/80 px-4 py-3 text-sm text-white focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/50" required />
            </div>
            <div class="md:col-span-2">
                <label for="travel-participants" class="block text-xs font-semibold uppercase tracking-widest text-slate-400">Participantes (emails y roles)</label>
                <textarea id="travel-participants" rows="3" placeholder="ana@example.com - Organizadora" class="mt-2 w-full rounded-2xl border border-white/10 bg-slate-900/80 px-4 py-3 text-sm text-white placeholder:text-slate-500 focus:border-brand-500 focus:outline-none focus:ring-2 focus:ring-brand-500/50"></textarea>
            </div>
        </div>
        <div class="flex flex-col gap-3 border-t border-white/5 pt-6 sm:flex-row sm:justify-end">
            <button type="button" data-close-modal="travel-modal" class="inline-flex items-center justify-center gap-2 rounded-full border border-white/10 px-5 py-2 text-sm font-semibold uppercase tracking-widest text-slate-300 transition hover:bg-white/10">Cancelar</button>
            <button type="submit" class="inline-flex items-center justify-center gap-2 rounded-full bg-brand-500 px-6 py-2 text-sm font-semibold uppercase tracking-widest text-white transition hover:bg-brand-600">
                <i data-lucide="save" class="size-4"></i>
                Guardar viaje
            </button>
        </div>
    </form>
</dialog>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const modal = document.getElementById("travel-modal");
            if (!modal) {
                return;
            }

            document.querySelectorAll("[data-open-modal='travel-modal']").forEach(function (trigger) {
                trigger.addEventListener("click", function (event) {
                    event.preventDefault();
                    modal.showModal();
                });
            });

            document.querySelectorAll("[data-close-modal='travel-modal']").forEach(function (closer) {
                closer.addEventListener("click", function (event) {
                    event.preventDefault();
                    modal.close();
                });
            });

            modal.addEventListener("click", function (event) {
                const rect = modal.getBoundingClientRect();
                const isInDialog = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;
                if (!isInDialog) {
                    modal.close();
                }
            });
        });
    </script>
}
